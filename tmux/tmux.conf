set-option -s default-terminal "tmux-256color"

set-option -g display-time 3000
set-option -g display-panes-time 3000
set-option -g detach-on-destroy off
set-option -g set-remain-on-exit on
set-option -g mouse on

set-option -g set-titles on
#set-option -g set-titles-string "#S:#I:#W - \"#T\" #{session_alerts}"
#set-option -g set-titles-string "#S@#h:#I:#W (has #{window_panes}) - \"#T\" (on #{pane_tty}) #{session_alerts}"
#set-option -g set-titles-string "#S@#h:#I:#W - \"#T\" (on #{pane_tty}) #{session_alerts}"
set-option -g set-titles-string "$USER@#h #S:#I:#W - \"#T\" (on #{pane_tty}) #{session_alerts}"

# Try to take less status bar space when one client is small.
# This does not work fully automatically (as it seems the session_width is unly updated later than the client-detached hook is run?)
# but can be made refresh by C-b r (refresh-client).
set-hook -g client-attached 'if-shell "[ #{session_width} -gt 95 ]" "set-option -g @wide_flag 1" "set-option -g @wide_flag 0"'
set-hook -g client-detached 'if-shell "[ #{session_width} -gt 95 ]" "set-option -g @wide_flag 1" "set-option -g @wide_flag 0"'
set-hook -g client-resized  'if-shell "[ #{session_width} -gt 95 ]" "set-option -g @wide_flag 1" "set-option -g @wide_flag 0"'
set-hook -g before-refresh-client 'if-shell "[ #{session_width} -gt 95 ]" "set-option -g @wide_flag 1" "set-option -g @wide_flag 0"'

#set-option -g status-left "[#S] "
#set-option -g status-left "[#S@#h] "
#set-option -g status-left "#{?client_prefix,#[bg=cyan],}[#S@#h] "
set-option -g status-left "#{?client_prefix,#[bg=cyan],}[#{?@wide_flag,$USER@#h ,}#S] "
# ^ Display USER@HOST info only if the session is wide enough.
#set-option -g status-left-length 10
#set-option -g status-left-length 27
## ^ 10 (7 session name + 3 framing) normally, + 17 (16 hostname + 1 framing) = 27
set-option -g status-left-length 36
# ^ 10 (7 session name + 3 framing) normally, + 17 (16 hostname + 1 framing), + 9 (8 username + 1 framing) = 36

#set-option -g status-right " \"#{=21:pane_title}\" %H:%M %d-%b-%y"
#set-option -g status-right-length 40
set-option -g status-right " \"#{=21:pane_title}\" #{?@wide_flag,%Y-,}%m-%d %3a %H:%M"
# ^ Display year only if the session is wide enough.
set-option -g status-right-length 45

#set-window-option -g window-status-format         "#I:#W#{?window_flags,#{window_flags}, }"
#set-window-option -g window-status-current-format "#I:#W#{?window_flags,#{window_flags}, }"
set-window-option -g window-status-format         "#I:#W#{?window_flags,#{window_flags}#{?pane_dead,D,},#{?pane_dead,D, }}"
set-window-option -g window-status-current-format "#I:#W#{?window_flags,#{window_flags}#{?pane_dead,D,},#{?pane_dead,D, }}"

set-option -g base-index 1

set-option -g status-keys emacs
set-window-option -g mode-keys vi
set-window-option -g xterm-keys on

#set-option -g status-style fg=black,bg=green
#set-option -g status-left-style default
#set-option -g status-right-style default
set-option -g status-style fg=white,bg=blue
set-option -g -a status-left-style bold
set-option -g -a status-right-style bold
set-window-option -g -a window-status-current-style bold

bind-key R respawn-pane
bind-key + paste-buffer

# Paste into VIM in paste mode:
bind-key C-] send-keys Escape ":se paste" Enter "a" \; paste-buffer \; send-keys Escape ":se nopaste" Enter "a"

# mnemonic: log
bind-key M-l pipe-pane -o 'cat >>~/output.#I-#P'

#bind-key M-s command-prompt -p ssh "new-window -n '%1' 'exec -- ssh %1'"
bind-key M-s command-prompt -p ssh "new-window -n '%1' ssh %1"

# ... su -
bind-key M-r new-window -n root -t :0 machinectl shell
# mnemonic: email
bind-key M-e new-window mutt
# ... -n log less +F /var/log/syslog /var/log/auth.log
bind-key M-j new-window -n journal journalctl -n 1000 -f
# mnemonic: www
bind-key M-w new-window -n apache "cd /var/log/apache2 && exec -- less +F *.log"
# mnemonic: IRC
bind-key M-i switch-client -t main \; new-window -t main:1 -n vm-initia ssh vm-initia
#bind-key M-s -n ssh ssh-to
#bind-key M-D new-session -A -s xfer -n dl
#bind-key M-d switch-client -t xfer
bind-key M-d new-session -A -s xfer -n dl
bind-key M-D switch-client -t xfer \; new-window -t xfer -n dl
# mnemonic: music
bind-key M-M switch-client -t main \; new-window -t main:99 cmus
bind-key M-m switch-client -t main \; select-window -t main:99

source-file -q ~/.tmux.local.conf
